#! /usr/bin/python3

import sys

from shutil import copyfile

project = sys.argv[1]


def create_service(project):
    service_file_name = 'services/%s.yaml' % project
    copyfile('templates/service.yaml', service_file_name)
    update_file(service_file_name, project)


def create_ingresses(project, enviroments):
    project_split = project.split('.')

    for enviroment in enviroments:

        # Add the enviroment between the domain if subdomain
        if len(project_split) > 2:
            file_name = '%s.%s.%s.%s.yaml' % (
                project_split[0],
                enviroment,
                project_split[1],
                project_split[2]
            )
        else:
            file_name = '%s.%s.yaml' % (
                enviroment,
                project
            )

        src = 'templates/%s.yaml' % enviroment
        dst = 'ingresses/%s/%s' % (
            enviroment,
            file_name
        )

        # Remove production from the file and project naming
        if enviroment == 'production':
            file_name = file_name.replace('production.', '')
            dst = dst.replace('production.', '')

        copyfile(src, dst)
        update_file(dst, file_name)


def update_file(file_name, project):
    project = project.replace('.yaml', '')
    project_name = project.replace('.', '-')
    project_domain = project
    prod_project_name = project_name.replace('staging-', '')
    with open(file_name) as file_handle:
        file_contents = file_handle.read()

    file_contents = file_contents.replace('PRODPROJECTNAME', prod_project_name)
    file_contents = file_contents.replace('PROJECTNAME', project_name)
    file_contents = file_contents.replace('PROJECTDOMAIN', project_domain)

    with open(file_name, 'w') as file_handle:
        file_handle.write(file_contents)


create_service(project)
create_ingresses(project, ['staging', 'production'])
