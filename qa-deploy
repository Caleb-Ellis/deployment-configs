#! /usr/bin/env bash

# Bash strict mode
set -euo pipefail

USAGE="Usage
===

  $ ./qa-deploy PRODUCTION_URL [STAGING_URL]

Description
---
Deploy locally to minikube.
"

function invalid() {
    message=${1}
    echo "Error: ${message}"
    echo ""
    echo "$USAGE"
    exit 1
}

function run_minikube() {
    # Run minikube
    if ! minikube ip &> /dev/null; then
        minikube start
    fi

    minikube addons enable ingress
    kubectl config set-context minikube
}

function deploy_service() {
    service="${1}"

    cat "services/${service}.yaml" | sed 's|prod-comms.docker-registry.canonical.com|canonicalwebteam|' | sed 's|[:][$][{]TAG_TO_DEPLOY[_aa-zA-Z]*[}]||' | sed 's|replicas: [0-9][0-9]*|replicas: 1|' | kubectl apply --filename -
}

function deploy_ingress() {
    ingress="${1}"
    # Create the ingress domains
    cat "ingresses/${ingress}.yaml" | sed '/namespace:/d' | kubectl apply --filename -
}

function run() {
    production="${1:-}"
    staging="${2:-}"
    if [ -z "${production}" ]; then invalid "Missing production url"; fi

    run_minikube

    deploy_service "${production}"

    deploy_ingress "production/${production}"

    if [ -n "${staging}" ]; then deploy_ingress "staging/${staging}"; fi
}

run ${@}
